<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="audit_error" xml:space="preserve">
    <value>Need to review batch number</value>
  </data>
  <data name="audit_status_error" xml:space="preserve">
    <value>Audit failed, the current sampling order is not the initial state!</value>
  </data>
  <data name="BATCH_NO_INFO_NULL" xml:space="preserve">
    <value>Failed to obtain the QC data, please check whether the QC number is correct!</value>
  </data>
  <data name="BATCH_NO_NOT_EMPTY" xml:space="preserve">
    <value>Please fill in the BatchNo.</value>
  </data>
  <data name="delete_detail_status_error" xml:space="preserve">
    <value>Failed to delete, the current sampling order is not the initial state, unable to delete the detail data!</value>
  </data>
  <data name="delete_error" xml:space="preserve">
    <value>Deletion failed, no data to be deleted was found, please refresh and try again!</value>
  </data>
  <data name="delete_status_error" xml:space="preserve">
    <value>Delete failed, the current sampling list is not the initial state!</value>
  </data>
  <data name="detail_error" xml:space="preserve">
    <value>Operation failed, please refresh and try again!</value>
  </data>
  <data name="detail_status_error" xml:space="preserve">
    <value>Operation failed, the current sampling order is not the initial state!</value>
  </data>
  <data name="FAIL_ERROR" xml:space="preserve">
    <value>Please fill in the correct Fail Qty.</value>
  </data>
  <data name="GET_REWORK_DATA_ERROR" xml:space="preserve">
    <value>Failed to obtain rework data!</value>
  </data>
  <data name="ID_NOT_EMPTY" xml:space="preserve">
    <value>Please fill in the correct ID.</value>
  </data>
  <data name="LINES_INFO_EMPTY" xml:space="preserve">
    <value>Line body information does not exist!</value>
  </data>
  <data name="QC_TYPE_ERROR" xml:space="preserve">
    <value>Current document non-completion inspection form!</value>
  </data>
  <data name="QC_TYPE_NULL" xml:space="preserve">
    <value>Failed to get receipt verification type!</value>
  </data>
  <data name="RESULT_TYPE_ERROR" xml:space="preserve">
    <value>Wrong inspection order review type!</value>
  </data>
  <data name="RESULT_VALUE_ERROR" xml:space="preserve">
    <value>Please check Result value.</value>
  </data>
  <data name="SITES_INFO_EMPTY" xml:space="preserve">
    <value>The site information does not exist!</value>
  </data>
  <data name="SN_NOT_EMPTY" xml:space="preserve">
    <value>Please fill in serial number.</value>
  </data>
  <data name="SN_NOT_EXIST" xml:space="preserve">
    <value>The product serial number does not exist, please re-enter!</value>
  </data>
  <data name="SN_QTY_FULL" xml:space="preserve">
    <value>Cannot exceed the inspection quantity!</value>
  </data>
  <data name="STATUS_ERROR" xml:space="preserve">
    <value>The current quality inspection sheet has been approved and cannot be modified.</value>
  </data>
  <data name="STATUS_VALUE_ERROR" xml:space="preserve">
    <value>Please check Status value.</value>
  </data>
  <data name="update_error" xml:space="preserve">
    <value>Failed to modify, the current sampling order is not the initial state!</value>
  </data>
  <data name="USER_NAME_NOT_EMPTY" xml:space="preserve">
    <value>User information does not exist!</value>
  </data>
</root>